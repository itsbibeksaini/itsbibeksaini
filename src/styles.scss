html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; transition: all 0.5s ease-in-out; }
.vertical-center{
  position: absolute;
  top: 50%;
  transform: translateY(-50%);  
}

.centralize{
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);  

}

.display-block{
  display: block;
}

.padding1015{
  padding: 10px 15px !important;
}

.padding2030{
  padding: 20px 30px !important;
}

.shadow-1{
  box-shadow: 0 1px 8px rgba(0,0,0,0.4);
}

.pointer{
  cursor: pointer;
}

.ellipses{
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}


@media screen and (max-width:425px) {
  header{
    text-align: center !important;
  }
}
/* Importing Bootstrap SCSS file. */
@import '~bootstrap/scss/bootstrap';


* {
	box-sizing: border-box;
}

img {
	height: 100%;
	width: 100%;
	display: block;
	object-fit: cover;
}

:root {
	// We just need to know these 3 values up front:
	--gutter: 10px;
	--wrapper: calc(100vw - ( 2 * var(--gutter)));
	
	--noOfColumns: 2;
	
	// Number of gutters is columns minus 1:
	--noOfGutters: calc(var(--noOfColumns) - 1);
	
	// Aspect ratio goes here:
	--ratioA: 16;
	--ratioB: 9;
	
	// Use the aspect ratio to calculate the factor for multiplication:
	--factor: calc(var(--ratioB) / var(--ratioA));
	
	// Calculating the row height:
	--rh: calc(( (var(--wrapper) - (var(--noOfGutters) * var(--gutter))) 
		/ var(--noOfColumns)) * var(--factor));
	
	@media (min-width: 60em) {
		--wrapper: 60em;
		--gutter: 20px;
		--noOfColumns: 4;
		--ratioA: 1;
		--ratioB: 1;
	}
}

.grid {
	max-width: var(--wrapper);
	display: grid;
	grid-template-columns: repeat(var(--noOfColumns), minmax(0, 1fr));
	grid-auto-flow: dense;
	grid-auto-rows: minmax(var(--rh), auto); // If the content is taller then the box will grow to fit. This is only going to work if the column value is 1fr
	grid-gap: var(--gutter);
	margin: var(--gutter);
	
	@media (min-width: 60em) {
		margin: var(--gutter) auto;
	}
}

.grid__item {
	background-color: steelBlue;
}

.grid__item--lg {
	grid-column: span 2;
	grid-row: span 2;
	background-color: blue;
	position: relative;
}

.grid__item--right {
	@media (min-width: 60em) {
		grid-column: 3 / span 2;
	}
}

.grid__item--db {
	grid-column: span 2;
	background-color: lightBlue;
	padding: 1.5em;
	
	@media (min-width: 60em) {
		background-color: transparent;
		padding: 0;
	}
}

.caption {
	position: absolute;
	width: 100%;
	height: 100%;
	padding: 1.5em;
	color: white;
}


